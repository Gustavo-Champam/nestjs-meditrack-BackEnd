import { Body, Controller, Get, Post, Req, UnauthorizedException, UseGuards } from '@nestjs/common';
import { Types } from 'mongoose';
import { AuthGuard } from '@nestjs/passport';
import { MedicationsService } from './medications.service';
import { CreateMedDto } from './dto/create-med.dto';

@Controller('medications')
@UseGuards(AuthGuard('jwt'))
export class MedicationsController {
  constructor(private readonly medicationsService: MedicationsService) {}

  @Post()
  create(@Req() req: any, @Body() dto: CreateMedDto) {
    const ownerId = req.user?.sub || req.user?._id || req.user?.id;
    if (!ownerId) throw new UnauthorizedException('Usuário não autenticado');
    return this.medicationsService.create({ ...dto, owner: new Types.ObjectId(req.user.sub ?? req.user.userId) });
  }

  @Get()
  list(@Req() req: any) {
    const ownerId = req.user?.sub || req.user?._id || req.user?.id;
    if (!ownerId) throw new UnauthorizedException('Usuário não autenticado');
    return this.medicationsService.listByOwner(ownerId);
  }
}







